# Для получения рещения под каждый пункт задания необходимо раскоментировать необходимый 
# файл и закоментировать не нежные. В том числе под пункты A и B необходимо раскоментиорвать
# нужный делитель

# Основная идея алгоритма в том, что мы подсчитываем максимальную сумму,
# а после, в случае некратности, удаляем наименьшие делители, чтобы привести число к делимости на 89

# Открываем файл и считываем количество представленных в нем чисел
file = open('27_T.txt') # Для тестирования программы на основе данного примера работы в условии
# file = open('27_B.txt') # Для задания с файлом B
# file = open('27_A.txt') # Для задания с файлом A
cnt = int(file.readline())

dels = 50 # Для тестового примера из условия
# dels = 89 # Для файлов A и B

totalSum, maxSum, minLen = 0, 0, 0
tailLen = [0] * dels
tailSum = [0] + [None] * (dels - 1)

# Сохраним сумму всех прочитанных чисел в переменную totalSum
for ind in range(1, cnt + 1):
    num = int(file.readline())
    totalSum += num
    ost = totalSum % dels
    # Проверяем наличие суммы для текущего остатка
    if tailSum[ost] != None:
        # Если блок выполняется, значит найдена новая сумма
        curSum = totalSum - tailSum[ost]
        curLen = ind - tailLen[ost]
        # Проверяем больше ли у нас найденная сумма чем максимальная,
        # в случаем если они равны берем сумму с минимальной длиной
        if (curSum > maxSum) or (curSum == maxSum and curLen < minLen):
            maxSum = curSum
            minLen = curLen
    else:
        tailSum[ost] = totalSum
        tailLen[ost] = ind

# Обязательно закрываем файл и выводим полученное значение на экран
file.close()
print(minLen)